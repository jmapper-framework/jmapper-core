= Release Notes =

== 1.2.2 - 15 December 2014 ==

*merge optimized of two arrays*.

the actual operation is:
{{{
String[] newArray = new String[firstArray.length + secondArray.length];
int index = 0;
for(int i = 0; i < firstArray.length: i++){
   newArray[index++] = firstArray[i];
}
 
for(int i = 0; i < secondArray.length: i++){
   newArray[index++] = secondArray[i];
}
}}}
This code is simple but slow, the best way to do this is to use system methods, as follow: 
{{{
String[] newArray = Arrays.copyOf(firstArray, firstArray.length + secondArray.length);
System.arraycopy(secondArray, 0, newArray, firstArray.length, secondArray.length);  
}}}
This algorithm is three times faster and short.

*Errors management of Dynamic Methods*.

errors managed: methods poorly written and null variables as input.

*Added management of primitive types in complex mappings*.

the dynamic mappings between primitive types and complex types as Map,Collection etc.. now are permitted.

*Dependencies update*.

XStream, slf4j and javassist and added JMapper API.

*Added printStackTrace*.

To avoid log management a printStackTrace will be added.

*Mapping between collections*.

The order of the destination will be the same of source.

*get method for boolean*.

For boolean types: will be permitted have a "get" method in addition to "is" method.

*OSGI compatible*.

Will be published an artifact with only interfaces to be compliant to OSGI specification.

== 1.2.0 - 16 February 2013 ==

*[globalMapping Global Mapping]* added.<br/>This feature permits to apply a global mapping avoiding configuration redundancy.

*Packaging renamed*.<br/>
The package names will be changed from it.avutils.{{{*}}} to com.googlecode.{{{*}}}

*Maven pom adjustment*.<br/>
Some dependencies will be deleted as redundant.

== 1.1.1 - 9 January 2013 ==

With this released the features added are:

*[AdvancedInheritanceExamples Inherited configuration]*<br/>
Now we can define a common configuration/conversions in the superclass, less code, less redundance and less maintenance.

*[ImplicitConversions Implicit conversion between arrays and collections]*<br/>
With this features we can configure arrays with collections and vice versa, with any type of items (primitive, wrapper and mapped).

*[oneToMany OneToMany method changed]*<br/>
To prevent unexpected behavior in case of singleton pattern usage in multi-threaded environment, the definition of the target class will be done through the passage of the class as input to the method. 

== 1.1.0 - 8 December 2012 ==

*[ExplicitConversions Explicit conversions]* added.<br/>This feature permits to apply a specific logic as a simple conversion or to insert a condition, both in XML that in java.

== 1.0.0 - 12 September 2012 ==

First release of JMapper Framework.<br />
This release contains basic features as:
 * create and enrich target objects
 * apply a specific logic to the mapping (only valued fields, only null fields, etc..)
 * automated management of the XML file
 * possibility of implementing the 1 to N and N to 1 relationships