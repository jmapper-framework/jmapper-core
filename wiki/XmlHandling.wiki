#summary XmlHandler for an easy manipulation of the xml file.

= Xml handling =

As can be compact configuration in XML format, there is always the possibility of error-prone typing it, to reset these risks and speed up its completion, the framework exposes the class *{{{XmlHandler}}}* that has a number of utility methods.

Most of its methods use a java bean *{{{Attribute}}}*:
{{{
         class Attribute {

               String name;
               String value;
               String[] attributes;
               Class<?>[] classes;
    
               // getter and setter...
         }
}}}
The Attribute reflects the parameters of the @JMap annotation plus a string: name, the name of the current attribute.

== addAttributes ==

addAttributes lets you add one or more attributes to an existing class in the xml configuration file.
{{{
         String[] attributes = {"field2Class1","field2Class2","field2Class3"};
         Class<?>[]  classes = {"field2Class1","field2Class2","field2Class3"};
         Attribute attribute = new Attribute("field", attributes, classes);


}}}
== deleteAttributes ==
== addClass ==
== deleteClass ==
== overrideClass ==
== addAnnotatedClass ==
== addAnnotatedClassAll ==
== deleteAnnotatedClasses ==
== overrideAnnotatedClass ==
== overrideAnnotatedClassAll ==
== fromXmlToAnnotation ==
== fromXmlToAnnotationAll ==
== cleanAnnotatedClass ==
== cleanAnnotatedClassAll ==